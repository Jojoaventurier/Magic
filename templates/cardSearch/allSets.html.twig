{% extends 'base.html.twig' %}

{% block title %}Toutes les extensions{% endblock %}

{% block body %}
<div class="bg-black h-full">
    <div class="war flex flex-col w-full items-center space-y-6"> <!--gradient-adapt-->
        <div class="space-y-2 border border-white p-4 mt-20 rounded">
            <h1 class="px-6 text-3xl font-medium text-white">Sets/Extensions</h1>
        </div>
    {# </div> #}
    {# <div class="war"> #}
        <div class="w-full flex flex-col justify-center items-center pt-4">
            
            <input id="set-search-bar" 
                    name="set-search-bar"
                class="w-[300px] text-sm px-4 py-2 border rounded-lg focus:outline focus:outline-red-800" 
                placeholder="Exemple : Phyrexia" 
                type="text" 
                onkeyup="filterSets()">
            <label for="set-search-bar" class="text-sm text-white italic">Vous pouvez filtrer par nom de l'extension</label>
        </div>

        <div class="w-full flex justify-center pt-10">
            <div id="detailBoard" class="flex justify-center max-w-[1124px] rounded-lg"> <!--elesh-norn-->
                <table id="setTable" class="w-max-[1124px] bg-white bg-opacity-90 shadow-md rounded-lg overflow-hidden">
                    <thead class="bg-gray-100 border-b">
                        <tr>
                            <th class="px-8 py-2 text-left text-sm font-medium text-gray-600">
                                Nom de l'extension
                            </th>
                            <th class="py-2 text-sm font-medium text-gray-600 w-[60px] w-max-[60px]">
                                Set Code
                            </th>
                            <th class="px-10 py-2 text-right text-sm font-medium text-gray-600">
                                Total cartes
                            </th>
                            <th class="px-8 py-2 text-right text-sm font-medium text-gray-600">
                                Date de sortie
                            </th>
                        </tr>
                    </thead>
                    <tbody id="setList">
                        <!-- The sets will be populated here -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        console.log('Page chargée et script exécuté!');

        const setList = document.querySelector("#setList");
        const baseUrl = "{{ path('show_set', {'setCode': 'PLACEHOLDER'}) }}";

        if (setList) {
            fetch('https://api.scryfall.com/sets')
                .then((response) => response.json())
                .then((data) => {
                    // Filter sets to include only those with set_type 'core', 'expansion', or 'masters'.
                    const filteredSets = data.data.filter(set => 
                        set.set_type === 'core' || 
                        set.set_type === 'expansion' || 
                        set.set_type === 'commander' || 
                        set.set_type === 'draft_innovation' || 
                        set.set_type === 'masters'
                    );
    
                    // Iterate over each filtered set and create a row with the relevant information.
                    filteredSets.forEach(set => {
                        let row = document.createElement('tr');
    
                        // Create a cell for each piece of information and add it to the row.
                        let setNameCell = document.createElement('td');
                        // Replace placeholder with actual set code
                        const setUrl = baseUrl.replace('PLACEHOLDER', encodeURIComponent(set.code));
                        setNameCell.innerHTML = `<a href="${setUrl}" class="inline-flex">
                                                    <img class="w-5 mr-3" src="${set.icon_svg_uri}"><span>${set.name}</span>
                                                </a>`;
                        setNameCell.classList.add('px-2', 'py-2', 'whitespace-no-wrap', 'border-b', 'border-gray-300', 'text-sm', 'text-red-700', 'hover:underline', 'text-left');
    
                        let setCodeCell = document.createElement('td');
                        setCodeCell.textContent = set.code;
                        setCodeCell.classList.add('px-4', 'py-2', 'border-b', 'border-gray-300', 'text-sm', 'uppercase', 'text-center', 'text-red-700', 'whitespace-nowrap', 'font-semibold');
                        setCodeCell.style.width = '55px'; // Adjust the width to fit content and make it button-like
                        setCodeCell.style.maxWidth = '55px'; // Ensure the width doesn't exceed the specified value
                        setCodeCell.style.margin = 'auto'; // Center it within the cell
    
                        let totalCardsCell = document.createElement('td');
                        totalCardsCell.textContent = set.card_count;
                        totalCardsCell.classList.add('px-16', 'py-2', 'whitespace-no-wrap', 'text-gray-700', 'border-b', 'border-gray-300', 'text-sm', 'text-right');
    
                        let releaseDateCell = document.createElement('td');
                        releaseDateCell.textContent = set.released_at;
                        releaseDateCell.classList.add('px-8', 'py-2', 'whitespace-no-wrap', 'text-gray-700', 'border-b', 'border-gray-300', 'text-sm', 'text-right');
    
                        // Append the cells to the row.
                        row.appendChild(setNameCell);
                        row.appendChild(setCodeCell);
                        row.appendChild(totalCardsCell);
                        row.appendChild(releaseDateCell);
    
                        // Append the row to the setList table body.
                        setList.appendChild(row);
                    });
                })
                .catch((error) => {
                    console.error('Erreur lors de la récupération des extensions:', error);
                });
        }
    });

    function filterSets() {
        // Get the search query
        const query = document.getElementById('set-search-bar').value.toLowerCase();
        const rows = document.querySelectorAll("#setList tr");
    
        rows.forEach(row => {
            const setName = row.querySelector('td a span').textContent.toLowerCase();
            if (setName.includes(query)) {
                row.style.display = '';  // Show the row if it matches
            } else {
                row.style.display = 'none';  // Hide the row if it doesn't match
            }
        });
    }
</script>

{% endblock %}
